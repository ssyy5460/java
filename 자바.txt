데이터타입 - 문자열과 숫자

console창

경고창에 뜸
alert(1);
undefined
alert(1+1);
undefined


산술연산자
1+1
2

문자

'Hello world'
"Hello world"
"Hello world"
"Hello world"

문자길이
"Hello world".length
11
length와 같은 것 properties

'Hello world'.toUpperCase() -대문자
"HELLO WORLD"

"HELLO WORLD".indexOf('O') - 0 1 2 3 4 번째에 O가 있다는 뜻
4


"1"
"1"
1
1

"1"+"1"
"11"


CSS 기초

Javascript 크게 하고 싶음
<h1>JavaScript</h1> 이렇게 하면 되지만 제목이 아님 땜빵식으로 ㄴㄴ
감쌀 수 있는 기능, 의미가 없는 기능이 필요 → <div> </div> 무색무취의 태그, 줄바꿈이 되는 태그
<span></span>무색무취의 태그 , 줄바꿈이 안되는 태그

<span style="font-weight:bold;"> 무색무취의 태그를 사용하여 이렇게 스타일을 설정할 수 있음!

if javascript의 태그가 1억개라면?
style이라는 코드를 사용해야함 

span class='이름' 을 사용하고
style 코드안에 .이름{ font-weight:bold; color:red; } 를 사용하여 꾸밀 수 있음 

CSS기초: 선택자
첫번째 태그를 색다르게 바꾸고 싶다면 id를 부여한다.
.이름 을 사용해서 바꾸는게 아니라 #id{color:green;} 사용하여 꾸밀 수 있음.

class는 grouping을 하는것  .이름 
id는 식별하는 것 #id

앞에 아무태그도 없이 span을 사용한다면 그 태그가 들어간 단어는 span스타일속성에 따름
id나 class의 style속성이 없다면 span스타일속성을 따른다.



제어할 태그 선택하기
night, day 버튼 넣기
<body>태그에 
<h1><a href="index.html">WEB</a></h1>
  <input type='button' value='night'>
  <input type='button' value='day'> 넣기

document.querySelector(".myclass"); 을 사용하여
class명이 myclass인것을 말함

,  <input type='button' value='night'
   onclick="
   document.querySelector('body').style.backgroundColor='black';
   document.querySelector('body').style.color='white';">
이런 식으로 스타일 속성 추가하기!


프로그램, 프로그래밍,프로그래머

HTML:컴퓨터언어, 웹페이지묘사언어, 시간의 순서X
JAVA script:컴퓨터언어, 컴퓨터 프로그래밍 언어, 시간의 순서 O , 상호작용

컴퓨터 반복작업 시간 많이 걸림
우리는 글을 써서 컴퓨터에게 제출



조건문 예고


비교연산자: ===
불리언: True, False

1<2 표현
1&lt;2

리팩토링 중복의 제거
코드 비효율적인면들 많음 
코드의 가독성을 높이고 유지보수를 해서 개선하는 작업을 리팩토링이라고함.

#코딩잘하는법
중복을 찾아낸다
중복된 코드를 없애도록 노력


배열(array)
많은 데이터를 다루게 됨 그냥 코딩을 통해서는 너무너무 복잡함

반복문(looper)

함수를 통해 같은 코드라고 내부 실행이 효율적으로 바뀔 수 있음.

객체는 정리정돈의 수단
서로 연관된 함수를 그룹핑해서 나누는것 : 객체



파일로 쪼개서 정리정돈하기
위 강의에서는 colors.js라는 파일을 따로 만들도 script src 를 사용하여 컬러를 지정했다.

javascript에서 파일 불러오는거(외부 함수) : script

파일이 많아지면 그만큼 브라우저의 접속량이 늘어서 좋지 않다. 
하지만 일단 한 번 접속한 파일은 컴퓨터에 브라우저가 미리 저장해놓는다. (cache) 
다음 접속에선 네트워크를 통하지 않고 다운로드 받은 파일을 불러온다. 
네트워크 트래픽도 사용자 입장에선 줄고, 서버 입장에선 비용도 절감할 수 있다. 
그래서 실질적으로 파일로 쪼개서 저장하는 게, 코딩을 정리정돈하면서 작성할 수도 있고 
웹페이지에 자신이 만든 무언가를 빠르게 로딩할 수 있다.

라이브러리 vs 프레임워크



라이브러리: 소프트웨어를 만드는 내가 땡겨와서 사용함.
재사용하기 쉽도록 되어있는 소프트웨어를 라이브러리라고 함.
자바에서 유명한 JQuery

프레임워크: 만들고자하는 것이 무엇이냐에 따라 언제나 필요한 공통적이 있고
달라지는 것이 있음. 공통적인것은 프레임워크가 만듦
기능이나 개성에 따라 달라지는 부분만 살짝살짝 수정함 . 반제품과 같음
다른 사람과 협력하는 모델이다.

 $('a') 이 웹페이지의 모든 a태그를 jQuery로 제어하겠다.

UI vs API: 
Ul; user interface
aPI: application programming interface

경고창은 어떻게 만들어진걸까?
웹브러우저를 만드는 사람이 경고창의 기능을 만들어두었고
우리는 함수를 사용하여 경고창을 띄울수 있게 되었다.

api를 프로그래밍적으로, 즉 순서대로 실행하는 것을 통해 만들어짐.


검색엔진 추천
document: 웹페이지에 있는 어떤 태그를 삭제하거나 자식태그를 추가할때.
필요한 메소드가 거기 포함되어있을거임
만약 document로 해결되지않는다 DOM(document Object Model) 사용
Dom의 일부분임

웹페이지가 아닌 웹브라우저를 제어해야한다 → window 사용

ajax:웹페이지를 리로드하지 않고 정보를 변경하고 싶을때
현대적인 웹앱을 만드는데 필수적

cookie: 웹페이지가 리로드되어도 현재상태를 유지하고싶을때
사용자를 위한 개인화된 서비스를 제공할수 잇음

offline web application: 인터넷에 끊겨도 동작하는 웹페이지를 만들고 싶을ㄸ

webRTC:화상 통신 웹앱을 만들고 싶을때

speech: 사용자의 음성을 인식하고 음성으로 정보를 전달하고 싶다면
speech api 사용

webGL: 3차원 그래픽으로 게임과 같은 것을 만들고 싶을때

webVR: 가상현실에 관심이 많을때